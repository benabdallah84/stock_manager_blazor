@page "/produit/delete/{productId:guid}"
@using comuneProject.Shared.Models
@inject HttpClient Http
@inject NavigationManager NavigationManager
<h2>Supprimé un produit</h2>
<br />
<div class="form-group">
        <h4>Do you want to delete this product?</h4>
        <table class="table">
            <tbody>
                <tr>
                    <td>Matricule</td>
                    <td>@product.Matricul</td>
                </tr>
                <tr>
                    <td>Désignation</td>
                    <td>@product.Designation</td>
                </tr>
                <tr>
                    <td>Quantity</td>
                    <td>@product.Quantity</td>
                </tr>
                <tr>
                    <td>Type de product</td>
                    <td>@product.productType</td>
                </tr>
                <tr>
                    <td>Prix unitaire</td>
                    <td>@product.Prix_unitaire</td>
                </tr>
            </tbody>
        </table>
    </div>
    <div class="form-group">

        <input type="submit" value="Supprimé" @onclick="(async () => await Removeproduct(product.Id))" class="btn btn-danger" />
        <input type="submit" value="Annulé" @onclick="(() => Cancel())" class="btn btn-warning" />
    </div>
@code {
    [Parameter]
    public Guid productId { get; set; }

    product product = new product();
    protected override async Task OnInitializedAsync()
    {
        product = await Http.GetFromJsonAsync<product>("/api/products/" + productId);
    }
    protected async Task Removeproduct(Guid productID)
    { 
        await Http.DeleteAsync("api/products/" + productID);
        NavigationManager.NavigateTo("/produit/details");
    }
    void Cancel()
    {
        NavigationManager.NavigateTo("/produit/details");
    }
   
}

