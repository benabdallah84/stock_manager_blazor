@page "/produit/edit/{productId:guid}"
@page "/produit/add"
@using comuneProject.Shared.Models

@inject HttpClient Http
@inject NavigationManager NavigationManager
<h1>Ajouté produit</h1>
<hr />
<EditForm Model="@product" OnValidSubmit="Saveproduct">
    <DataAnnotationsValidator />

    <div class="mb-3">
        <label for="Matricul" class="form-label">Matricule</label>
        <div class="col-md-4">
            <InputText class="form-control" @bind-Value="product.Matricul" />
        </div>
        <ValidationMessage For="@(() => product.Matricul)" />
    </div>
    <div class="mb-3">
        <label for="Designation" class="form-label">Désignation</label>
        <div class="col-md-4">
            <InputText class="form-control" @bind-Value="product.Designation" />
        </div>
        <ValidationMessage For="@(() => product.Designation)" />
    </div>
    <div class="mb-3">
        <label for="Quantity" class="form-label">Quantity</label>
        <div class="col-md-4">
            <InputNumber class="form-control" @bind-Value="product.Quantity" />
        </div>
        <ValidationMessage For="@(() => product.Quantity)" />
    </div>
    <div class="mb-3">
        <label for="productType" class="form-label">Type de produit</label>
        <div class="col-md-4">
            <InputSelect class="form-control" @bind-Value="product.productType">
                <option value="0">@categories.TypeProduit.Consomable</option>
                <option value="1">@categories.TypeProduit.Static</option>
            </InputSelect>
        </div>
        <ValidationMessage For="@(() => product.productType)" />
    </div>
    <div class="mb-3">
        <label for="Prix_unitaire" class="form-label">Prix unitaire</label>
        <div class="col-md-4">
            <InputNumber class="form-control" @bind-Value="product.Prix_unitaire" />
        </div>
        <ValidationMessage For="@(() => product.Prix_unitaire)" />
    </div>
    <div class="mb-3">
        <label for="Note" class="form-label">Note</label>
        <div class="col-md-4">
            <InputText class="form-control" @bind-Value="product.Note" />
        </div>
        <ValidationMessage For="@(() => product.Note)" />
    </div>

    <div class="form-group">
        <button type="submit" class="btn btn-primary">Sauvgardé</button>
        <button class="btn btn-light" @onclick="Cancel">Annulé</button>
    </div>
</EditForm>
@code {
    [Parameter]
    public Guid productId { get; set; }
    protected string Title = "Add";
    protected product product = new();
    protected override async Task OnParametersSetAsync()
    {
        if (productId != Guid.Empty)
        {
            Title = "Edit";
            product = await Http.GetFromJsonAsync<product>("api/products/" + productId);

        }
    }
    protected async Task Saveproduct()
    {

        if (product.Id != Guid.Empty)
        {
            await Http.PutAsJsonAsync("api/products" + productId, product);

        }
        else
        {
            await Http.PostAsJsonAsync("api/products", product);
        }

        Cancel();
    }
    public void Cancel()
    {
        NavigationManager.NavigateTo("/produit/details");
    }
}